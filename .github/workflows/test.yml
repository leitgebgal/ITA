name: Java CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="echo 'db.runCommand({ping: 1})' | mongosh"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build Docker images
        run: docker-compose build

      - name: Start Docker services
        run: docker-compose up -d

      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..30}; do
            if docker-compose exec mongo mongosh --eval 'db.runCommand({ ping: 1 })' > /dev/null 2>&1; then
              echo "MongoDB is ready!"
              break
            fi
            echo "Waiting for MongoDB to be ready..."
            sleep 2
          done

      - name: Run tests
        run: mvn test

      - name: Stop Docker services
        run: docker-compose down